<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteA" duration-ms="127" started-at="2016-04-02T09:10:03Z" finished-at="2016-04-02T09:10:03Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="77" started-at="2016-04-02T09:10:03Z" finished-at="2016-04-02T09:10:03Z">
      <class name="SuiteA.Test1">
        <test-method status="FAIL" signature="test1(java.lang.String, java.lang.String)[pri:0, instance:SuiteA.Test1@326de728]" name="test1" duration-ms="28" started-at="2016-04-02T14:40:03Z" data-provider="getdata" finished-at="2016-04-02T14:40:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Fail 1st Set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Fail 1st Set
	at org.testng.Assert.fail(Assert.java:94)
	at SuiteA.Test1.test1(Test1.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1240)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(java.lang.String, java.lang.String)[pri:0, instance:SuiteA.Test1@326de728]" name="test1" duration-ms="1" started-at="2016-04-02T14:40:03Z" data-provider="getdata" finished-at="2016-04-02T14:40:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- SuiteA.Test1 -->
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="12" started-at="2016-04-02T09:10:03Z" finished-at="2016-04-02T09:10:03Z">
      <class name="SuiteA.Test2">
        <test-method status="FAIL" signature="test2()[pri:0, instance:SuiteA.Test2@7907ec20]" name="test2" duration-ms="5" started-at="2016-04-02T14:40:03Z" finished-at="2016-04-02T14:40:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [B] but found [A]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [B] but found [A]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at SuiteA.Test2.test2(Test2.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1240)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- SuiteA.Test2 -->
    </test> <!-- Test2 -->
  </suite> <!-- SuiteA -->
  <suite name="MySuite" duration-ms="0" started-at="2016-04-02T09:10:06Z" finished-at="2016-04-02T09:10:06Z">
    <groups>
    </groups>
  </suite> <!-- MySuite -->
  <suite name="SuiteB" duration-ms="93" started-at="2016-04-02T09:10:05Z" finished-at="2016-04-02T09:10:05Z">
    <groups>
    </groups>
    <test name="Test3" duration-ms="9" started-at="2016-04-02T09:10:05Z" finished-at="2016-04-02T09:10:05Z">
      <class name="SuiteB.Test3">
        <test-method status="SKIP" signature="test3()[pri:0, instance:SuiteB.Test3@1888ff2c]" name="test3" duration-ms="2" started-at="2016-04-02T14:40:05Z" finished-at="2016-04-02T14:40:05Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test Skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test Skipped
	at SuiteB.Test3.test3(Test3.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1240)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- SuiteB.Test3 -->
    </test> <!-- Test3 -->
    <test name="Test4" duration-ms="5" started-at="2016-04-02T09:10:05Z" finished-at="2016-04-02T09:10:05Z">
      <class name="SuiteB.Test4">
        <test-method status="PASS" signature="test4()[pri:0, instance:SuiteB.Test4@16c0663d]" name="test4" duration-ms="2" started-at="2016-04-02T14:40:05Z" finished-at="2016-04-02T14:40:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- SuiteB.Test4 -->
    </test> <!-- Test4 -->
  </suite> <!-- SuiteB -->
</testng-results>
